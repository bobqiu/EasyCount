[system]
sql1=with \
(select g, mapmapset(refer,url) r_u_map, mapmap(refer, refertype) r_type_map, collect_set(case when urltype=3 then url else null end) blackurlsets, \
AGGRTIME agtime from urlrefer group by g coordinate by time_t*1000 with aggr interval 20 seconds having array_contains(collect_set(urltype), 3)) tmp, \
(select g, getallpathwithdests(r_u_map, blackurlsets) path expand, r_type_map, agtime from tmp where size(r_u_map)<100L) tmp1 \
insert into dest select AGGRTIME DIV 1000, g, array_getlast(path) pstr, count(1) from tmp1 where map_get(r_type_map, array_get(path,0))=0 \
group by g, array_getlast(path) coordinate by agtime with aggr interval 20 seconds, \
insert into dest1 select g, size(r_u_map), r_u_map, agtime from tmp where size(r_u_map)>=100L
;
;
; 1) for every g compute i: r_u_map is the url graph, ii: r_type_map is type map, iii: blackurlsets is black url list, iv: startrefers is start refers
;    v: r_site_map is map of refer to siteid. filter the urls whose type is 3
; 2) getallpathinlist_withsrcsanddests compute all the path from the graph, and filter the path that start from startrefers and end in blackurlsets
; 3) insert into dest the data for every g blacksink path num
; 4) insert into dest2 the data for every startsite blacksink path num
; 5) insert into dest1 the data exception path with map size bigger than 100
;
sql=with \
(select g, collect_set(array(refer,url)) r_u_map, mapmap(refer, refertype) r_type_map, collect_set(case when urltype=3 then url else null end) \
blackurlsets, collect_set(case when siteid>=0 then refer else null end) startrefers, mapmap(refer, siteid) r_site_map, AGGRTIME agtime \
from urlrefer group by g coordinate by time_t*1000 with aggr interval 20 seconds having array_contains(collect_set(urltype), 3)) tmp, \
(select g, getallpathinlist_withsrcsanddests(r_u_map, startrefers, blackurlsets) path expand, r_type_map, r_site_map, agtime from tmp \
where size(r_u_map)<100L) tmp1 \
insert into dest select AGGRTIME DIV 1000, g, array_getlast(path) pstr, count(1) from tmp1 where map_get(r_type_map, array_get(path,0))=0 \
group by g, array_getlast(path) coordinate by agtime with aggr interval 20 seconds, \
insert into dest2 select AGGRTIME DIV 1000, map_get(r_site_map, array_get(path,0)), count(1) from tmp1 \
where map_get(r_type_map, array_get(path,0))=0 group by map_get(r_site_map, array_get(path,0)) coordinate by agtime with aggr interval 20 seconds, \
insert into dest1 select g, size(r_u_map), r_u_map, agtime from tmp where size(r_u_map)>=100L


[tabledesc-1]
table.name=t
table.fields=time_t,bigint,:url,string,:refer,string,:urltype,int,:refertype,int,:g,string
table.field.splitter=,
table.list.splitter=;
table.map.splitter=:

[tabledesc-path]
table.name=urlrefer
table.fields=time_t,bigint,:url,string,:refer,string,:urltype,int,:refertype,int,:g,string,:siteid,int,
table.field.splitter=,
table.list.splitter=;
table.map.splitter=:

table.zk.servers=xxx1:2181,xxx2:2181,xxx3:2181,xxx4:2181,xxx5:2181
table.zk.root=/meta
table.topic=mig_pcmgr_refer
table.interfaceId=urlreferinfo
table.field.splitter=0x9

[tabledesc-dest]
table.name=dest
table.binary.mode=false
table.fields=k,string,:cd,bigint,
table.field.splitter=,
table.list.splitter=;
table.map.splitter=|

table.zk.servers=xxx1:2181,xxx2:2181,xxx3:2181,xxx4:2181,xxx5:2181
table.zk.root=/meta
table.topic=snglogserver
table.interfaceId=url_path

[tabledesc-dest2]
table.name=dest2
table.binary.mode=false
table.fields=k,string,:cd,bigint,
table.field.splitter=,
table.list.splitter=;
table.map.splitter=|

table.zk.servers=xxx1:2181,xxx2:2181,xxx3:2181,xxx4:2181,xxx5:2181
table.zk.root=/meta
table.topic=snglogserver
table.interfaceId=url_path_total


[tabledesc-dest1]
table.name=dest1
table.binary.mode=false
table.fields=k,string,:cd,bigint,
table.field.splitter=,
table.list.splitter=;
table.map.splitter=|

table.zk.servers=xxx1:2181,xxx2:2181,xxx3:2181,xxx4:2181,xxx5:2181
table.zk.root=/meta
table.topic=snglogserver
table.interfaceId=url_path_exception

