[system]
sql1=WITH \
(SELECT CDNOpType_, FileType_ ,Device_ ,ClientVersion_ ,b.country_id,b.province_id,b.city_id, \
b.isp_id,NetType_,ExpandCol1_,CDNErrNo_,avg(TransportSize_*1000/(CDNTransfEndTs_ - CDNTransfStartTs_)/1024) as rate, \
count(*) as cnt,sum(CDNTransfEndTs_ - CDNTransfStartTs_)/count(*) as avgtime,sum(TransportSize_*1000)/count(*) as avgsize, \
sum(TransportSize_*1000) as totalsize \
FROM log_10421 a \
LEFT JOIN ip_table b \
ON cast((a.ClientIP_ - a.ClientIP_ % 256) as string) = b.ipint \
WHERE TransportSize_ IS NOT null AND OpEndTs_ > OpStartTs_ AND CDNTransfEndTs_ > CDNTransfStartTs_ \
AND (OpEndTs_ - OpStartTs_) <= 200000 AND (CDNTransfEndTs_ - CDNTransfStartTs_) <= 200000 \
AND (Device_ <> 2 OR (Device_ = 2 AND ClientVersion_ > 604307705)) AND transportsize_ > 0 AND transportsize_ <= 100000000 \
AND conntotalcost_ > 0 AND conntotalcost_ <= 100000 \
GROUP BY CDNOpType_,FileType_,Device_,ClientVersion_,b.country_id,b.province_id,b.city_id,b.isp_id,NetType_,ExpandCol1_,CDNErrNo_) tmp10421 \
\
insert into weixin_res_meta select from_unixtime(AGGRTIME DIV 1000, 'yyyyMMdd') daytime,  CDNOpType_, FileType_ ,Device_ ,ClientVersion_ ,country_id,province_id,city_id,isp_id,NetType_,ExpandCol1_,CDNErrNo_,rate,cnt,avgtime,avgsize,totalsize, count(1) \
from tmp10421 GROUP BY CDNOpType_,FileType_,Device_,ClientVersion_,country_id,province_id,city_id,isp_id,NetType_,ExpandCol1_,CDNErrNo_ \
COORDINATE BY TimeStamp_*1000 WITH AGGR INTERVAL 1200 SECONDS

sql2= with (select "ylzt" name, qq from tbl_ylzt) ylzt \
(select "lol" name, qq from tbl_lol) lol \
(select name, qq from ylzt union all select name, qq from lol) utbl \
insert into result select name, count(qq) from utbl group by name coordinate by unix_timestamp() with aggr interval 60 seconds


sql2=insert into __printtable select EXECUTE(\
	DEFINE seq AS string default "", seq_array AS array<string>, idx AS int default 0\
	{\
		$seq := "11";\
		$seq_array := split(cast(abs(rand_i(1000000000))+1000000000 as string), "0");\
		FOR(\
			$idx < size($seq_array) \
			IF(\
				array_get($seq_array, $idx)<100000 \
				$seq := concat_ws("-", $seq, array_get($seq_array, $idx))\
			);\
			$idx := $idx + 1\
		)\
	}\
	EMIT $seq\
) from __innertable(1000)

sql4=with (select rand() r, null x, "" y, if(rand()>0.5, null, map(1,2)) m, if(rand_i(10)>5, null, map(1,2)) m1 from __innertable(1000)) tmp \
insert into __printtable select execute(\
DEFINE ks1 AS array<string>, newstr AS string \
	{\
		$newstr := "aaaa";\
		$newstr := "aaaav";\
		if(\
			m is not null \
			$newstr := "xxxxx"\
		)\
	}\
	EMIT $newstr\
) newstr, m from tmp  

sqldd=with (select map(cast(rand_i(10) as string), cast(rand_i(10) as string), cast(rand_i(10) as string), cast(rand_i(10) as string)) dimmap, \
map(cast(rand_i(10) as string), cast(rand_i(10) as string), cast(rand_i(10) as string), cast(rand_i(10) as string), cast(rand_i(10) as string), cast(rand_i(10) as string), cast(rand_i(10) as string), cast(rand_i(10) as string), cast(rand_i(10) as string), cast(rand_i(10) as string)) dimmap1 from __innertable(1000)) tmp \
(select "---------1--------", execute(\
DEFINE newmap AS map<string,string>, newstr AS string, ks as array<string>, ks1 as array<string>, i as int default 0, kc as int default 0, k as string, conststr as string default "1=&2=&3=&4=&5="\
	{\
		$newmap := str_to_map($conststr, "&", "=");\
		$ks := map_keyset(dimmap);\
		$ks1 := map_keyset(dimmap1);\
		$kc := size($ks);\
		for( \
			$i < $kc \
			$k := array_get($ks, $i);\
			if(\
				array_contains($ks1, $k) \
				$newmap := map_put($newmap, $k, concat("x", map_get(dimmap1, $k)));\
			);\
			$i := $i+1;\
		); \
		$newstr := map_to_str($newmap, "&", "=");\
	}\
	EMIT $newmap \
) newstr11, "---------2--------", dimmap, "---------3--------", dimmap1 from tmp  ) tmp1 \
insert into __printtable select newstr11, "---------2--------", dimmap, "---------3--------", dimmap1 from tmp1

sql=with (select map(cast(rand_i(10) as string), cast(rand_i(10) as string), cast(rand_i(10) as string), cast(rand_i(10) as string)) dimmap, \
map(cast(rand_i(10) as string), cast(rand_i(10) as string), cast(rand_i(10) as string), cast(rand_i(10) as string), cast(rand_i(10) as string), \
cast(rand_i(10) as string), cast(rand_i(10) as string), cast(rand_i(10) as string), cast(rand_i(10) as string), cast(rand_i(10) as string)) srcmap from __innertable(1000)) tmp, \
\
(select EXECUTE(\
	DEFINE ks1 AS array<string>, ks2 AS array<string>, keysarray AS array<string>, keycnt1 AS int, keycnt2 AS int, k1 AS string, k2 AS string, destmap AS map<string,string>, newstr AS string, i AS int default 0, j AS int default 0, flag AS int default 0\
	{\
		$keysarray := array("1", "2", "3", "4", "5");\
		$ks1 := map_keyset(srcmap);\
		$keycnt1 := size($ks1);\
		FOR(\
			$i < $keycnt1 \
			$k1 := array_get($ks1, $i);\
			$flag := 0;\
			IF(\
				array_contains($keysarray, $k1) \
				$destmap := map_put($destmap, $k1, map_get(srcmap, $k1));\
				$flag := 1\
			);\
			IF(\
				$flag = 0 \
				IF(\
					dimmap is not null \
					$ks2 := map_keyset(dimmap);\
					$keycnt2 := size($ks2);\
					if(\
						array_contains($ks2, $k1) \
						$destmap := map_put($destmap, map_get(dimmap, $k1), map_get(srcmap, $k1))\	
					)\
				)\
			);\
			$i := $i + 1\
		);\
		$newstr :=  map_to_str($destmap, "&", "=")\
	}\
	EMIT $newstr\
) deststr, srcmap, dimmap FROM tmp) tmp1 \
\
insert into __printtable select "-----1-----", deststr, "-----2-----", srcmap, "-----3-----", dimmap from tmp1




[tabledesc-log_10410]
table.name=log_10410
table.type=stream
table.fields=LogID_,bigint,:ProtocolVersion_,bigint,:Uin_,bigint,:IfSuccess_,bigint,:Device_,bigint,:ClientVersion_,bigint,:\
ClientIP_,bigint,:AgentIP_,bigint,:TimeStamp_,bigint,:ExpandCol1_,bigint,:ExpandCol2_,bigint,:SvrIp_,bigint,:SvrPort_,bigint,:\
CostTime_,bigint,:NetType_,bigint,:IpType_,bigint,:Alivetime_,bigint,:ConnectType_,bigint,:Funid_,bigint,:ErrCode_,bigint,:\
SignalStrength_,bigint,:UploadSize_,bigint,:DownloadSize_,bigint,:RetryCount_,bigint,:CostTimeref_,bigint,:\
StartTs_,bigint,:EndTs_,bigint,:ProcessId_,bigint,
table.zk.servers=xx-xx-xx1:2181,xx-xx-xx2:2181,xx-xx-xx3:2181,xx-xx-xx4:2181,xx-xx-xx5:2181
table.zk.root=/xxxx_xxxxxx
table.topic=cdg_xxxxxxx
table.interfaceId=log_10410

table.field.splitter=,
table.list.splitter=;
table.map.splitter=:


[tabledesc-meta]
table.name=weixin_res_meta
table.type=stream
table.fields=statDate,string,:device,string,:country,string,:cnt,bigint,:avgTime,double,
table.zk.servers=xx-xx-xx1:2181,xx-xx-xx2:2181,xx-xx-xx3:2181,xx-xx-xx4:2181,xx-xx-xx5:2181
table.zk.root=/xxxx
table.topic=xxxxxxxxx
table.interfaceId=1
table.field.splitter=,
table.list.splitter=;
table.map.splitter=:

[tabledesc-log_10421]
table.name=log_10421
table.type=stream
table.fields=LogID_,BIGINT,:ProtocolVersion_,BIGINT,:Uin_,BIGINT,:IfSuccess_,BIGINT,:Device_,BIGINT,:ClientVersion_,BIGINT,:\
ClientIP_,BIGINT,:AgentIP_,BIGINT,:TimeStamp_,BIGINT,:ExpandCol1_,BIGINT,:ExpandCol2_,BIGINT,:DeviceModel_,STRING,:DeviceBrand_,STRING,:\
OsName_,STRING,:OsVersion_,STRING,:LanguageVersion_,STRING,:StartTime_,BIGINT,:EndTime_,BIGINT,:Count_,BIGINT,:CientErrNo_,BIGINT,:\
OpType_,BIGINT,:OpStartTs_,BIGINT,:OpEndTs_,BIGINT,:NetType_,BIGINT,:FileType_,BIGINT,:FileSize_,BIGINT,:CDNErrNo_,BIGINT,:CDNOpType_,BIGINT,:\
SvrIp_,STRING,:IPCount_,BIGINT,:FileKey_,STRING,:SliceCount_,BIGINT,:TransportSize_,BIGINT,:ConnTotalCost_,BIGINT,:ConnTryTimes_,BIGINT,:\
CDNTransfStartTs_,BIGINT,:CDNTransfEndTs_,BIGINT,:IsHitCache_,BIGINT,:CompressPicLevel_,BIGINT
table.zk.servers=xx-xx-xx1:2181,xx-xx-xx2:2181,xx-xx-xx3:2181,xx-xx-xx4:2181,xx-xx-xx5:2181
table.zk.root=/xxxx_xxxxxx
table.topic=cdg_xxxxxxx
table.interfaceId=log_10421

table.field.splitter=,
table.list.splitter=;
table.map.splitter=:

[tabledesc-tde]
table.name=ip_table
table.type=tde
table.fields=ipint,string,:country_id,string,:province_name,string,:isp_name,string,:city_name,string,:\
country_name,string,:province_id,string,:city_id,string,:isp_id,string,

table.field.splitter=,

table.tde.master=xx.xxx.xxx.xxx:5198
table.tde.slave=xx.xxx.xxx.xxx:5198
table.tde.groupname=xxxxxx_tdengine
table.tde.tid=xxxx
table.tde.timeout=5000

[tabledesc-log_10133]
table.name=log_10133
table.type=stream
table.fields=LogID_,BIGINT,:ProtocolVersion_,BIGINT,:Uin_,BIGINT,:IfSuccess_,BIGINT,:Device_,BIGINT,:ClientVersion_,BIGINT,:\
ClientIP_,BIGINT,:AgentIP_,BIGINT,:TimeStamp_,BIGINT,:ExpandCol1_,BIGINT,:ExpandCol2_,BIGINT,:SvrIp_,BIGINT,:\
SvrPort_,BIGINT,:BeginTime_,BIGINT,:EndTime_,BIGINT,:CostTime_,BIGINT,:NetType_,BIGINT,:IpType_,BIGINT,:ConnectType_,BIGINT,:\
IsFirst_,BIGINT,:ErrCode_,BIGINT,:SignalStrength_,BIGINT,:IspCode_,BIGINT,:IspName_,STRING,:NewNetType_,BIGINT,:SubNetType_,BIGINT,:\
NetExtraInfo_,BIGINT
table.zk.servers=xx-xx-xx1:2181,xx-xx-xx2:2181,xx-xx-xx3:2181,xx-xx-xx4:2181,xx-xx-xx5:2181
table.zk.root=/xxxx_xxxxxx
table.topic=cdg_xxxxxxx
table.interfaceId=log_10133

table.field.splitter=,
table.list.splitter=;
table.map.splitter=:
