package com.tencent.easycount.parse;

import junit.framework.Assert;

import org.antlr.runtime.ANTLRStringStream;
import org.antlr.runtime.RecognitionException;
import org.antlr.runtime.TokenRewriteStream;
import org.junit.Test;

import com.tencent.easycount.parse.TrcLexer;
import com.tencent.easycount.parse.TrcParser;

public class ParserTest {
	private String genAstTree(String cmd) {
		TrcLexer lexer = new TrcLexer(new ANTLRStringStream(cmd));
		TokenRewriteStream tokens = new TokenRewriteStream(lexer);
		TrcParser parser = new TrcParser(tokens);
		TrcParser.statement_return r;
		try {
			r = parser.statement();
			return r.getTree().toStringTree();
		} catch (RecognitionException e) {
			return null;
		}
	}

	private void checkCmdTree(String cmd, String astTree) {
		String tree = genAstTree(cmd);
		System.out.println(tree);
		Assert.assertEquals(tree, astTree);
	}

	@Test
	public void testParser() {
		checkCmdTree(
				"INSERT INTO xxx SELECT * FROM xx",
				"(TOK_ROOT_QUERY (TOK_INSERT_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME xx))) (TOK_INSERT (TOK_DESTINATION (TOK_TABNAME xxx)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF))))) <EOF>");
		checkCmdTree(
				"INSERT INTO xxx SELECT a, b, c FROM xx",
				"(TOK_ROOT_QUERY (TOK_INSERT_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME xx))) (TOK_INSERT (TOK_DESTINATION (TOK_TABNAME xxx)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL a)) (TOK_SELEXPR (TOK_TABLE_OR_COL b)) (TOK_SELEXPR (TOK_TABLE_OR_COL c)))))) <EOF>");
		checkCmdTree(
				"INSERT INTO xxx SELECT a, b, c FROM xx WHERE x>100 AND y!=1000",
				"(TOK_ROOT_QUERY (TOK_INSERT_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME xx))) (TOK_INSERT (TOK_DESTINATION (TOK_TABNAME xxx)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL a)) (TOK_SELEXPR (TOK_TABLE_OR_COL b)) (TOK_SELEXPR (TOK_TABLE_OR_COL c))) (TOK_WHERE (AND (> (TOK_TABLE_OR_COL x) 100) (!= (TOK_TABLE_OR_COL y) 1000)))))) <EOF>");
		checkCmdTree(
				"INSERT INTO xxx SELECT a, sum(b) FROM xx WHERE x>100 AND y!=1000 GROUP BY a",
				"(TOK_ROOT_QUERY (TOK_INSERT_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME xx))) (TOK_INSERT (TOK_DESTINATION (TOK_TABNAME xxx)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL a)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_TABLE_OR_COL b)))) (TOK_WHERE (AND (> (TOK_TABLE_OR_COL x) 100) (!= (TOK_TABLE_OR_COL y) 1000))) (TOK_GROUPBY (TOK_TABLE_OR_COL a))))) <EOF>");
		checkCmdTree(
				"INSERT INTO xxx SELECT a, sum(b) FROM xx LEFT JOIN yy, zz ON xx.a=yy.a AND xx.dd=zz.dd WHERE x>100 AND y!=1000 GROUP BY a",
				"(TOK_ROOT_QUERY (TOK_INSERT_QUERY (TOK_FROM (TOK_LEFTOUTERJOIN (TOK_TABREF (TOK_TABNAME xx)) (TOK_TABREF (TOK_TABNAME yy)) (TOK_TABREF (TOK_TABNAME zz)) (ON (AND (= (. (TOK_TABLE_OR_COL xx) a) (. (TOK_TABLE_OR_COL yy) a)) (= (. (TOK_TABLE_OR_COL xx) dd) (. (TOK_TABLE_OR_COL zz) dd)))))) (TOK_INSERT (TOK_DESTINATION (TOK_TABNAME xxx)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL a)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_TABLE_OR_COL b)))) (TOK_WHERE (AND (> (TOK_TABLE_OR_COL x) 100) (!= (TOK_TABLE_OR_COL y) 1000))) (TOK_GROUPBY (TOK_TABLE_OR_COL a))))) <EOF>");
		checkCmdTree(
				"INSERT INTO xxx SELECT a, sum(b) FROM (SELECT * FROM lll) yy LEFT JOIN xx ON xx.a=yy.a WHERE x>100 AND y!=1000 GROUP BY a",
				"(TOK_ROOT_QUERY (TOK_INSERT_QUERY (TOK_FROM (TOK_LEFTOUTERJOIN (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME lll))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)))) yy) (TOK_TABREF (TOK_TABNAME xx)) (ON (= (. (TOK_TABLE_OR_COL xx) a) (. (TOK_TABLE_OR_COL yy) a))))) (TOK_INSERT (TOK_DESTINATION (TOK_TABNAME xxx)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL a)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_TABLE_OR_COL b)))) (TOK_WHERE (AND (> (TOK_TABLE_OR_COL x) 100) (!= (TOK_TABLE_OR_COL y) 1000))) (TOK_GROUPBY (TOK_TABLE_OR_COL a))))) <EOF>");
		checkCmdTree(
				"INSERT INTO xxx SELECT a, sum(b) FROM (SELECT * FROM bb UNION ALL SELECT * FROM vv) dd WHERE x>100 AND y!=1000 GROUP BY a",
				"(TOK_ROOT_QUERY (TOK_INSERT_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_UNION (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME bb))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF))))) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME vv))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)))))) dd)) (TOK_INSERT (TOK_DESTINATION (TOK_TABNAME xxx)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL a)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_TABLE_OR_COL b)))) (TOK_WHERE (AND (> (TOK_TABLE_OR_COL x) 100) (!= (TOK_TABLE_OR_COL y) 1000))) (TOK_GROUPBY (TOK_TABLE_OR_COL a))))) <EOF>");
		checkCmdTree(
				"INSERT INTO xxx SELECT a, sum(b) FROM (SELECT * FROM bb UNION ALL SELECT * FROM vv UNION ALL SELECT * FROM gg) dd WHERE x>100 AND y!=1000 GROUP BY a",
				"(TOK_ROOT_QUERY (TOK_INSERT_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_UNION (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME bb))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF))))) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME vv))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF))))) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME gg))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)))))) dd)) (TOK_INSERT (TOK_DESTINATION (TOK_TABNAME xxx)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL a)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_TABLE_OR_COL b)))) (TOK_WHERE (AND (> (TOK_TABLE_OR_COL x) 100) (!= (TOK_TABLE_OR_COL y) 1000))) (TOK_GROUPBY (TOK_TABLE_OR_COL a))))) <EOF>");
	}

	@Test
	public void testParser1() {
		checkCmdTree(
				"INSERT INTO xxx SELECT * FROM xx, INSERT INTO xxx SELECT a, sum(b) FROM (SELECT * FROM bb UNION ALL SELECT * FROM vv) dd WHERE x>100 AND y!=1000 GROUP BY a",
				"(TOK_ROOT_QUERY (TOK_INSERT_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME xx))) (TOK_INSERT (TOK_DESTINATION (TOK_TABNAME xxx)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)))) (TOK_INSERT_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_UNION (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME bb))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF))))) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME vv))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)))))) dd)) (TOK_INSERT (TOK_DESTINATION (TOK_TABNAME xxx)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL a)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_TABLE_OR_COL b)))) (TOK_WHERE (AND (> (TOK_TABLE_OR_COL x) 100) (!= (TOK_TABLE_OR_COL y) 1000))) (TOK_GROUPBY (TOK_TABLE_OR_COL a))))) <EOF>");
	}

	@Test
	public void testParser3() {
		checkCmdTree(
				"WITH (SELECT * FROM ddd) ddd1, (SELECT * FROM ggg) ggg1 INSERT INTO xxx SELECT * FROM xx, INSERT INTO xxx SELECT a, sum(b) FROM (SELECT * FROM bb UNION ALL SELECT * FROM vv UNION ALL SELECT * FROM kkk) dd WHERE x>100 AND y!=1000 GROUP BY a",
				"(TOK_ROOT_QUERY (TOK_WITH (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME ddd))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)))) ddd1) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME ggg))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)))) ggg1)) (TOK_INSERT_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME xx))) (TOK_INSERT (TOK_DESTINATION (TOK_TABNAME xxx)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)))) (TOK_INSERT_QUERY (TOK_FROM (TOK_SUBQUERY (TOK_UNION (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME bb))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF))))) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME vv))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF))))) (TOK_SUBQUERY (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME kkk))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)))))) dd)) (TOK_INSERT (TOK_DESTINATION (TOK_TABNAME xxx)) (TOK_SELECT (TOK_SELEXPR (TOK_TABLE_OR_COL a)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_TABLE_OR_COL b)))) (TOK_WHERE (AND (> (TOK_TABLE_OR_COL x) 100) (!= (TOK_TABLE_OR_COL y) 1000))) (TOK_GROUPBY (TOK_TABLE_OR_COL a))))) <EOF>");
	}

	public static void main(String[] args) {
		new ParserTest().testParser();
	}
}
